"assert_eq"
{
  count 2 lt { stackundeflow } if
  
  % unsupported types (for now)
  [
    "arraytype"
    "dicttype"
    "proctype"
    "operatortype"
  ]
  1 index type 
  in { typecheck } if

  dict begin % stack a context dictionary

  {
    "expected" exch def
    "actual" exch def

    "_error" mark
      "name" "assert_eq_fail"
      "expected" expected
      "actual" actual
    dicttomark def

    actual type expected type neq
    {
      _error
        "message" "Not the same type" set
      throw
    } if

    actual expected neq
    {
      _error
        "message" "Not equal" set
      throw
    } if
  }
  {
    end % unstack context dictionary
  }
  finally

} bind def
